{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'Buildings',\n  setup() {\n    const loading = ref(false);\n    const buildings = ref([]);\n    const apartments = ref([]);\n    const cheques = ref([]);\n    const selectedBuilding = ref(null);\n    const totalApartments = computed(() => apartments.value.length);\n    const totalCheques = computed(() => cheques.value.length);\n    const totalAmount = computed(() => {\n      return cheques.value.reduce((sum, cheque) => sum + (cheque.Amount || 0), 0);\n    });\n    const fetchData = async () => {\n      loading.value = true;\n      try {\n        const [buildingsRes, apartmentsRes, chequesRes] = await Promise.all([axios.get('/api/buildings'), axios.get('/api/apartments'), axios.get('/api/cheques/detail')]);\n        buildings.value = buildingsRes.data;\n        apartments.value = apartmentsRes.data;\n        cheques.value = chequesRes.data;\n\n        // Debug logging\n        console.log('Buildings - Buildings data:', buildingsRes.data);\n        console.log('Buildings - Apartments data:', apartmentsRes.data);\n        console.log('Buildings - Cheques data:', chequesRes.data);\n        console.log('Buildings - Sample building ID:', buildingsRes.data[0]?.BuildingID);\n        console.log('Buildings - Sample apartment BuildingID:', apartmentsRes.data[0]?.BuildingID);\n        console.log('Buildings - Sample cheque BuildingID:', chequesRes.data[0]?.BuildingID);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const getBuildingStats = buildingId => {\n      // Debug logging for this specific building\n      console.log(`Buildings - Getting stats for BuildingID: ${buildingId}`);\n      console.log(`Buildings - Available apartments:`, apartments.value);\n      console.log(`Buildings - Available cheques:`, cheques.value);\n\n      // Try different property names for BuildingID\n      const buildingApartments = apartments.value.filter(apt => apt.BuildingID === buildingId || apt.buildingID === buildingId || apt.BuildingId === buildingId);\n      const buildingCheques = cheques.value.filter(cheque => cheque.BuildingID === buildingId || cheque.buildingID === buildingId || cheque.BuildingId === buildingId);\n      const totalAmount = buildingCheques.reduce((sum, cheque) => sum + (cheque.Amount || cheque.amount || 0), 0);\n      const stats = {\n        apartments: buildingApartments.length,\n        cheques: buildingCheques.length,\n        amount: totalAmount\n      };\n      console.log(`Buildings - Stats for BuildingID ${buildingId}:`, stats);\n      console.log(`Buildings - Found apartments:`, buildingApartments);\n      console.log(`Buildings - Found cheques:`, buildingCheques);\n      return stats;\n    };\n    const getBuildingApartments = buildingId => {\n      // Try different property names for BuildingID\n      return apartments.value.filter(apt => apt.BuildingID === buildingId || apt.buildingID === buildingId || apt.BuildingId === buildingId);\n    };\n    const getOccupancyRate = () => {\n      // This is a placeholder calculation - you might want to add actual occupancy data\n      return Math.floor(Math.random() * 30) + 70; // Random between 70-100%\n    };\n    const selectBuilding = building => {\n      selectedBuilding.value = building;\n    };\n    const refreshData = async () => {\n      await fetchData();\n    };\n    const formatCurrency = amount => {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(amount || 0);\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    return {\n      loading,\n      buildings,\n      apartments,\n      cheques,\n      selectedBuilding,\n      totalApartments,\n      totalCheques,\n      totalAmount,\n      getBuildingStats,\n      getBuildingApartments,\n      getOccupancyRate,\n      selectBuilding,\n      refreshData,\n      formatCurrency\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","name","setup","loading","buildings","apartments","cheques","selectedBuilding","totalApartments","value","length","totalCheques","totalAmount","reduce","sum","cheque","Amount","fetchData","buildingsRes","apartmentsRes","chequesRes","Promise","all","get","data","console","log","BuildingID","error","getBuildingStats","buildingId","buildingApartments","filter","apt","buildingID","BuildingId","buildingCheques","amount","stats","getBuildingApartments","getOccupancyRate","Math","floor","random","selectBuilding","building","refreshData","formatCurrency","Intl","NumberFormat","style","currency","format"],"sources":["D:\\Workplace\\V2R\\V2R_ChequesDashboard\\client\\src\\views\\Buildings.vue"],"sourcesContent":["<template>\r\n  <div class=\"space-y-6\">\r\n    <!-- Page Header -->\r\n    <div class=\"sm:flex sm:items-center sm:justify-between\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold text-gray-900\">Buildings Management</h1>\r\n        <p class=\"mt-2 text-sm text-gray-700\">\r\n          Overview and management of all buildings\r\n        </p>\r\n      </div>\r\n      <div class=\"mt-4 sm:mt-0\">\r\n        <button \r\n          @click=\"refreshData\"\r\n          :disabled=\"loading\"\r\n          class=\"btn-primary inline-flex items-center\"\r\n        >\r\n          <svg v-if=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          <svg v-else class=\"-ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n          </svg>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Summary Cards -->\r\n    <div class=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-primary-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Buildings</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ buildings.length }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5v4m8-4v4M8 11v4m8-4v4\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Apartments</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ totalApartments }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Cheques</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ totalCheques }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Amount</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ formatCurrency(totalAmount) }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Buildings Grid -->\r\n    <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-2 xl:grid-cols-3\">\r\n      <div \r\n        v-for=\"building in buildings\" \r\n        :key=\"building.BuildingID\"\r\n        class=\"card hover:shadow-lg transition-shadow duration-200 cursor-pointer\"\r\n        @click=\"selectBuilding(building)\"\r\n      >\r\n        <div class=\"flex items-center justify-between mb-4\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-6 h-6 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-3\">\r\n              <h3 class=\"text-lg font-medium text-gray-900\">{{ building.BuildingName }}</h3>\r\n              <p class=\"text-sm text-gray-500\">Building #{{ building.BuildingNumber || 'N/A' }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <div class=\"text-2xl font-bold text-primary-600\">\r\n              {{ getBuildingStats(building.BuildingID).apartments }}\r\n            </div>\r\n            <div class=\"text-xs text-gray-500\">Apartments</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"border-t border-gray-100 pt-4\">\r\n          <div class=\"grid grid-cols-2 gap-4 text-sm\">\r\n            <div>\r\n              <span class=\"text-gray-500\">Cheques:</span>\r\n              <span class=\"ml-2 font-medium text-gray-900\">\r\n                {{ getBuildingStats(building.BuildingID).cheques }}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span class=\"text-gray-500\">Amount:</span>\r\n              <span class=\"ml-2 font-medium text-gray-900\">\r\n                {{ formatCurrency(getBuildingStats(building.BuildingID).amount) }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-4 pt-4 border-t border-gray-100\">\r\n          <div class=\"flex items-center justify-between\">\r\n            <span class=\"text-sm text-gray-500\">Occupancy Rate</span>\r\n            <div class=\"flex items-center\">\r\n              <div class=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\r\n                <div \r\n                  class=\"bg-primary-600 h-2 rounded-full\" \r\n                  :style=\"{ width: getOccupancyRate(building.BuildingID) + '%' }\"\r\n                ></div>\r\n              </div>\r\n              <span class=\"text-sm font-medium text-gray-900\">\r\n                {{ getOccupancyRate(building.BuildingID) }}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Building Details Modal -->\r\n    <div v-if=\"selectedBuilding\" class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n      <div class=\"relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white\">\r\n        <div class=\"mt-3\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <h3 class=\"text-lg font-medium text-gray-900\">\r\n              {{ selectedBuilding.BuildingName }} Details\r\n            </h3>\r\n            <button \r\n              @click=\"selectedBuilding = null\"\r\n              class=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"space-y-4\">\r\n            <div class=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700\">Building Name</label>\r\n                <p class=\"mt-1 text-sm text-gray-900\">{{ selectedBuilding.BuildingName }}</p>\r\n              </div>\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700\">Building Number</label>\r\n                <p class=\"mt-1 text-sm text-gray-900\">{{ selectedBuilding.BuildingNumber || 'N/A' }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"border-t border-gray-200 pt-4\">\r\n              <h4 class=\"text-md font-medium text-gray-900 mb-3\">Apartment List</h4>\r\n              <div class=\"max-h-60 overflow-y-auto\">\r\n                <div \r\n                  v-for=\"apartment in getBuildingApartments(selectedBuilding.BuildingID)\"\r\n                  :key=\"apartment.ApartmentID\"\r\n                  class=\"flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0\"\r\n                >\r\n                  <div>\r\n                    <span class=\"text-sm font-medium text-gray-900\">{{ apartment.ApartmentName }}</span>\r\n                    <span class=\"ml-2 text-xs text-gray-500\">Floor {{ apartment.FloorNumber }}</span>\r\n                  </div>\r\n                  <span class=\"text-xs text-gray-500\">{{ apartment.ApartmentNumber || 'N/A' }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"border-t border-gray-200 pt-4\">\r\n              <h4 class=\"text-md font-medium text-gray-900 mb-3\">Financial Summary</h4>\r\n              <div class=\"grid grid-cols-3 gap-4 text-center\">\r\n                <div>\r\n                  <div class=\"text-2xl font-bold text-primary-600\">\r\n                    {{ getBuildingStats(selectedBuilding.BuildingID).apartments }}\r\n                  </div>\r\n                  <div class=\"text-xs text-gray-500\">Apartments</div>\r\n                </div>\r\n                <div>\r\n                  <div class=\"text-2xl font-bold text-green-600\">\r\n                    {{ getBuildingStats(selectedBuilding.BuildingID).cheques }}\r\n                  </div>\r\n                  <div class=\"text-xs text-gray-500\">Cheques</div>\r\n                </div>\r\n                <div>\r\n                  <div class=\"text-2xl font-bold text-purple-600\">\r\n                    {{ formatCurrency(getBuildingStats(selectedBuilding.BuildingID).amount) }}\r\n                  </div>\r\n                  <div class=\"text-xs text-gray-500\">Total Amount</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Buildings',\r\n  setup() {\r\n    const loading = ref(false)\r\n    const buildings = ref([])\r\n    const apartments = ref([])\r\n    const cheques = ref([])\r\n    const selectedBuilding = ref(null)\r\n\r\n    const totalApartments = computed(() => apartments.value.length)\r\n    const totalCheques = computed(() => cheques.value.length)\r\n    const totalAmount = computed(() => {\r\n      return cheques.value.reduce((sum, cheque) => sum + (cheque.Amount || 0), 0)\r\n    })\r\n\r\n    const fetchData = async () => {\r\n      loading.value = true\r\n      try {\r\n        const [buildingsRes, apartmentsRes, chequesRes] = await Promise.all([\r\n          axios.get('/api/buildings'),\r\n          axios.get('/api/apartments'),\r\n          axios.get('/api/cheques/detail')\r\n        ])\r\n\r\n        buildings.value = buildingsRes.data\r\n        apartments.value = apartmentsRes.data\r\n        cheques.value = chequesRes.data\r\n\r\n        // Debug logging\r\n        console.log('Buildings - Buildings data:', buildingsRes.data)\r\n        console.log('Buildings - Apartments data:', apartmentsRes.data)\r\n        console.log('Buildings - Cheques data:', chequesRes.data)\r\n        console.log('Buildings - Sample building ID:', buildingsRes.data[0]?.BuildingID)\r\n        console.log('Buildings - Sample apartment BuildingID:', apartmentsRes.data[0]?.BuildingID)\r\n        console.log('Buildings - Sample cheque BuildingID:', chequesRes.data[0]?.BuildingID)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const getBuildingStats = (buildingId) => {\r\n      // Debug logging for this specific building\r\n      console.log(`Buildings - Getting stats for BuildingID: ${buildingId}`)\r\n      console.log(`Buildings - Available apartments:`, apartments.value)\r\n      console.log(`Buildings - Available cheques:`, cheques.value)\r\n      \r\n      // Try different property names for BuildingID\r\n      const buildingApartments = apartments.value.filter(apt => \r\n        apt.BuildingID === buildingId || \r\n        apt.buildingID === buildingId || \r\n        apt.BuildingId === buildingId\r\n      )\r\n      \r\n      const buildingCheques = cheques.value.filter(cheque => \r\n        cheque.BuildingID === buildingId || \r\n        cheque.buildingID === buildingId || \r\n        cheque.BuildingId === buildingId\r\n      )\r\n      \r\n      const totalAmount = buildingCheques.reduce((sum, cheque) => sum + (cheque.Amount || cheque.amount || 0), 0)\r\n\r\n      const stats = {\r\n        apartments: buildingApartments.length,\r\n        cheques: buildingCheques.length,\r\n        amount: totalAmount\r\n      }\r\n      \r\n      console.log(`Buildings - Stats for BuildingID ${buildingId}:`, stats)\r\n      console.log(`Buildings - Found apartments:`, buildingApartments)\r\n      console.log(`Buildings - Found cheques:`, buildingCheques)\r\n      \r\n      return stats\r\n    }\r\n\r\n    const getBuildingApartments = (buildingId) => {\r\n      // Try different property names for BuildingID\r\n      return apartments.value.filter(apt => \r\n        apt.BuildingID === buildingId || \r\n        apt.buildingID === buildingId || \r\n        apt.BuildingId === buildingId\r\n      )\r\n    }\r\n\r\n    const getOccupancyRate = () => {\r\n      // This is a placeholder calculation - you might want to add actual occupancy data\r\n      return Math.floor(Math.random() * 30) + 70 // Random between 70-100%\r\n    }\r\n\r\n    const selectBuilding = (building) => {\r\n      selectedBuilding.value = building\r\n    }\r\n\r\n    const refreshData = async () => {\r\n      await fetchData()\r\n    }\r\n\r\n    const formatCurrency = (amount) => {\r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n      }).format(amount || 0)\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchData()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      buildings,\r\n      apartments,\r\n      cheques,\r\n      selectedBuilding,\r\n      totalApartments,\r\n      totalCheques,\r\n      totalAmount,\r\n      getBuildingStats,\r\n      getBuildingApartments,\r\n      getOccupancyRate,\r\n      selectBuilding,\r\n      refreshData,\r\n      formatCurrency\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}