{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"space-y-6\"\n};\nconst _hoisted_2 = {\n  class: \"sm:flex sm:items-center sm:justify-between\"\n};\nconst _hoisted_3 = {\n  class: \"mt-4 sm:mt-0\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"-ml-1 mr-2 h-4 w-4\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  viewBox: \"0 0 24 24\"\n};\nconst _hoisted_7 = {\n  class: \"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\"\n};\nconst _hoisted_8 = {\n  class: \"card\"\n};\nconst _hoisted_9 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_10 = {\n  class: \"ml-5 w-0 flex-1\"\n};\nconst _hoisted_11 = {\n  class: \"text-lg font-medium text-gray-900\"\n};\nconst _hoisted_12 = {\n  class: \"card\"\n};\nconst _hoisted_13 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_14 = {\n  class: \"ml-5 w-0 flex-1\"\n};\nconst _hoisted_15 = {\n  class: \"text-lg font-medium text-gray-900\"\n};\nconst _hoisted_16 = {\n  class: \"card\"\n};\nconst _hoisted_17 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_18 = {\n  class: \"ml-5 w-0 flex-1\"\n};\nconst _hoisted_19 = {\n  class: \"text-lg font-medium text-gray-900\"\n};\nconst _hoisted_20 = {\n  class: \"card\"\n};\nconst _hoisted_21 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_22 = {\n  class: \"ml-5 w-0 flex-1\"\n};\nconst _hoisted_23 = {\n  class: \"text-lg font-medium text-gray-900\"\n};\nconst _hoisted_24 = {\n  class: \"grid grid-cols-1 lg:grid-cols-2 gap-6\"\n};\nconst _hoisted_25 = {\n  class: \"card\"\n};\nconst _hoisted_26 = {\n  class: \"h-64\"\n};\nconst _hoisted_27 = {\n  ref: \"chequesChart\"\n};\nconst _hoisted_28 = {\n  class: \"card\"\n};\nconst _hoisted_29 = {\n  class: \"h-64\"\n};\nconst _hoisted_30 = {\n  ref: \"buildingsChart\"\n};\nconst _hoisted_31 = {\n  class: \"card\"\n};\nconst _hoisted_32 = {\n  class: \"overflow-x-auto\"\n};\nconst _hoisted_33 = {\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_34 = {\n  class: \"bg-white divide-y divide-gray-200\"\n};\nconst _hoisted_35 = {\n  class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\n};\nconst _hoisted_36 = {\n  class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\n};\nconst _hoisted_37 = {\n  class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\n};\nconst _hoisted_38 = {\n  class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\n};\nconst _hoisted_39 = {\n  class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Page Header \"), _createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", {\n    class: \"text-3xl font-bold text-gray-900\"\n  }, \"Dashboard Overview\"), _createElementVNode(\"p\", {\n    class: \"mt-2 text-sm text-gray-700\"\n  }, \" Real-time overview of your buildings, apartments, and cheques \")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.refreshData && $setup.refreshData(...args)),\n    disabled: $setup.loading,\n    class: \"btn-primary inline-flex items-center\"\n  }, [$setup.loading ? (_openBlock(), _createElementBlock(\"svg\", _hoisted_5, [...(_cache[1] || (_cache[1] = [_createElementVNode(\"circle\", {\n    class: \"opacity-25\",\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"4\"\n  }, null, -1 /* CACHED */), _createElementVNode(\"path\", {\n    class: \"opacity-75\",\n    fill: \"currentColor\",\n    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n  }, null, -1 /* CACHED */)]))])) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_6, [...(_cache[2] || (_cache[2] = [_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n  }, null, -1 /* CACHED */)]))])), _cache[3] || (_cache[3] = _createTextVNode(\" Refresh \", -1 /* CACHED */))], 8 /* PROPS */, _hoisted_4)])]), _createCommentVNode(\" Summary Cards \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"flex-shrink-0\"\n  }, [_createElementVNode(\"div\", {\n    class: \"w-8 h-8 bg-primary-100 rounded-lg flex items-center justify-center\"\n  }, [_createElementVNode(\"svg\", {\n    class: \"w-5 h-5 text-primary-600\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n  })])])], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"dl\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"dt\", {\n    class: \"text-sm font-medium text-gray-500 truncate\"\n  }, \"Total Buildings\", -1 /* CACHED */)), _createElementVNode(\"dd\", _hoisted_11, _toDisplayString($setup.summary.totalBuildings), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[8] || (_cache[8] = _createStaticVNode(\"<div class=\\\"flex-shrink-0\\\"><div class=\\\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\\\"><svg class=\\\"w-5 h-5 text-green-600\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\\\"></path><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M8 5v4m8-4v4M8 11v4m8-4v4\\\"></path></svg></div></div>\", 1)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"dl\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"dt\", {\n    class: \"text-sm font-medium text-gray-500 truncate\"\n  }, \"Total Apartments\", -1 /* CACHED */)), _createElementVNode(\"dd\", _hoisted_15, _toDisplayString($setup.summary.totalApartments), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"flex-shrink-0\"\n  }, [_createElementVNode(\"div\", {\n    class: \"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center\"\n  }, [_createElementVNode(\"svg\", {\n    class: \"w-5 h-5 text-yellow-600\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n  })])])], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"dl\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"dt\", {\n    class: \"text-sm font-medium text-gray-500 truncate\"\n  }, \"Total Cheques\", -1 /* CACHED */)), _createElementVNode(\"dd\", _hoisted_19, _toDisplayString($setup.summary.totalCheques), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"flex-shrink-0\"\n  }, [_createElementVNode(\"div\", {\n    class: \"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\"\n  }, [_createElementVNode(\"svg\", {\n    class: \"w-5 h-5 text-purple-600\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n  })])])], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"dl\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"dt\", {\n    class: \"text-sm font-medium text-gray-500 truncate\"\n  }, \"Total Amount\", -1 /* CACHED */)), _createElementVNode(\"dd\", _hoisted_23, _toDisplayString($setup.formatCurrency($setup.summary.totalAmount)), 1 /* TEXT */)])])])])]), _createCommentVNode(\" Charts Section \"), _createElementVNode(\"div\", _hoisted_24, [_createCommentVNode(\" Cheques by Month Chart \"), _createElementVNode(\"div\", _hoisted_25, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-medium text-gray-900 mb-4\"\n  }, \"Cheques by Month\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"canvas\", _hoisted_27, null, 512 /* NEED_PATCH */)])]), _createCommentVNode(\" Buildings Distribution Chart \"), _createElementVNode(\"div\", _hoisted_28, [_cache[14] || (_cache[14] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-medium text-gray-900 mb-4\"\n  }, \"Buildings Overview\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"canvas\", _hoisted_30, null, 512 /* NEED_PATCH */)])])]), _createCommentVNode(\" Recent Activity \"), _createElementVNode(\"div\", _hoisted_31, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-medium text-gray-900 mb-4\"\n  }, \"Recent Cheques\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"table\", _hoisted_33, [_cache[15] || (_cache[15] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-50\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Date\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Building\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Apartment\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Cheque No\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Amount\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentCheques, cheque => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: cheque.ChequeID,\n      class: \"hover:bg-gray-50\"\n    }, [_createElementVNode(\"td\", _hoisted_35, _toDisplayString($setup.formatDate(cheque.ChequeDate)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_36, _toDisplayString(cheque.BuildingName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_37, _toDisplayString(cheque.ApartmentName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_38, _toDisplayString(cheque.ChequeNo), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_39, _toDisplayString($setup.formatCurrency(cheque.Amount)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","xmlns","fill","viewBox","stroke","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$setup","refreshData","disabled","loading","_hoisted_5","cx","cy","r","d","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","summary","totalBuildings","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","totalApartments","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","totalCheques","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","formatCurrency","totalAmount","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_Fragment","_renderList","recentCheques","cheque","key","ChequeID","_hoisted_35","formatDate","ChequeDate","_hoisted_36","BuildingName","_hoisted_37","ApartmentName","_hoisted_38","ChequeNo","_hoisted_39","Amount"],"sources":["D:\\Workplace\\V2R\\V2R_ChequesDashboard\\client\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"space-y-6\">\r\n    <!-- Page Header -->\r\n    <div class=\"sm:flex sm:items-center sm:justify-between\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold text-gray-900\">Dashboard Overview</h1>\r\n        <p class=\"mt-2 text-sm text-gray-700\">\r\n          Real-time overview of your buildings, apartments, and cheques\r\n        </p>\r\n      </div>\r\n      <div class=\"mt-4 sm:mt-0\">\r\n        <button \r\n          @click=\"refreshData\"\r\n          :disabled=\"loading\"\r\n          class=\"btn-primary inline-flex items-center\"\r\n        >\r\n          <svg v-if=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          <svg v-else class=\"-ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n          </svg>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Summary Cards -->\r\n    <div class=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-primary-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Buildings</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ summary.totalBuildings }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5v4m8-4v4M8 11v4m8-4v4\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Apartments</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ summary.totalApartments }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Cheques</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ summary.totalCheques }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Amount</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ formatCurrency(summary.totalAmount) }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Charts Section -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      <!-- Cheques by Month Chart -->\r\n      <div class=\"card\">\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Cheques by Month</h3>\r\n        <div class=\"h-64\">\r\n          <canvas ref=\"chequesChart\"></canvas>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Buildings Distribution Chart -->\r\n      <div class=\"card\">\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Buildings Overview</h3>\r\n        <div class=\"h-64\">\r\n          <canvas ref=\"buildingsChart\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Recent Activity -->\r\n    <div class=\"card\">\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Recent Cheques</h3>\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Building</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Apartment</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Cheque No</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"cheque in recentCheques\" :key=\"cheque.ChequeID\" class=\"hover:bg-gray-50\">\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ formatDate(cheque.ChequeDate) }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.BuildingName }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.ApartmentName }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.ChequeNo }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ formatCurrency(cheque.Amount) }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, nextTick } from 'vue'\r\nimport { Chart, registerables } from 'chart.js'\r\nimport axios from 'axios'\r\nimport { format, parseISO } from 'date-fns'\r\n\r\nChart.register(...registerables)\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  setup() {\r\n    const loading = ref(false)\r\n    const summary = ref({\r\n      totalBuildings: 0,\r\n      totalApartments: 0,\r\n      totalCheques: 0,\r\n      totalAmount: 0\r\n    })\r\n    const recentCheques = ref([])\r\n    const buildings = ref([])\r\n    const apartments = ref([])\r\n    const cheques = ref([])\r\n    const chequesChart = ref(null)\r\n    const buildingsChart = ref(null)\r\n\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const [buildingsRes, apartmentsRes, chequesRes, summaryRes] = await Promise.all([\r\n          axios.get('/api/buildings'),\r\n          axios.get('/api/apartments'),\r\n          axios.get('/api/cheques/detail'),\r\n          axios.get('/api/cheques/summary')\r\n        ])\r\n\r\n        // Store the data for charts\r\n        buildings.value = buildingsRes.data\r\n        apartments.value = apartmentsRes.data\r\n        cheques.value = chequesRes.data\r\n\r\n        // Debug logging\r\n        console.log('Dashboard - Buildings data:', buildingsRes.data)\r\n        console.log('Dashboard - Apartments data:', apartmentsRes.data)\r\n        console.log('Dashboard - Cheques data:', chequesRes.data)\r\n        console.log('Dashboard - Summary data:', summaryRes.data)\r\n\r\n        // Try to get from summary first, then fallback to cheques detail\r\n        let totalCheques = summaryRes.data?.NumberOfCheques || summaryRes.data?.numberOfCheques || 0\r\n        let totalAmount = summaryRes.data?.TotalAmount || summaryRes.data?.totalAmount || 0\r\n\r\n        // Fallback: calculate from cheques detail if summary is empty\r\n        if (!totalCheques && chequesRes.data.length > 0) {\r\n          totalCheques = chequesRes.data.length\r\n          totalAmount = chequesRes.data.reduce((sum, cheque) => sum + (cheque.Amount || 0), 0)\r\n          console.log('Dashboard - Calculated from cheques:', { totalCheques, totalAmount })\r\n        }\r\n\r\n        summary.value = {\r\n          totalBuildings: buildingsRes.data.length,\r\n          totalApartments: apartmentsRes.data.length,\r\n          totalCheques: totalCheques,\r\n          totalAmount: totalAmount\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching summary:', error)\r\n      }\r\n    }\r\n\r\n    const fetchRecentCheques = async () => {\r\n      try {\r\n        const response = await axios.get('/api/cheques/detail')\r\n        recentCheques.value = response.data.slice(0, 10) // Get first 10\r\n        console.log('Dashboard - Recent cheques:', recentCheques.value)\r\n      } catch (error) {\r\n        console.error('Error fetching recent cheques:', error)\r\n        recentCheques.value = []\r\n      }\r\n    }\r\n\r\n    const createCharts = async () => {\r\n      await nextTick()\r\n      \r\n      // Cheques by Month Chart\r\n      if (chequesChart.value) {\r\n        // Calculate cheques by month from real data\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const chequesByMonth = new Array(12).fill(0)\r\n        \r\n        cheques.value.forEach(cheque => {\r\n          if (cheque.ChequeDate) {\r\n            try {\r\n              const date = new Date(cheque.ChequeDate)\r\n              const month = date.getMonth()\r\n              chequesByMonth[month]++\r\n            } catch (e) {\r\n              console.log('Could not parse date:', cheque.ChequeDate)\r\n            }\r\n          }\r\n        })\r\n\r\n        new Chart(chequesChart.value, {\r\n          type: 'line',\r\n          data: {\r\n            labels: monthNames,\r\n            datasets: [{\r\n              label: 'Cheques Count',\r\n              data: chequesByMonth,\r\n              borderColor: 'rgb(59, 130, 246)',\r\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n              tension: 0.4,\r\n              fill: true\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              legend: {\r\n                display: false\r\n              },\r\n              tooltip: {\r\n                callbacks: {\r\n                  label: function(context) {\r\n                    return `Cheques: ${context.parsed.y}`\r\n                  }\r\n                }\r\n              }\r\n            },\r\n                         scales: {\r\n               y: {\r\n                 beginAtZero: true,\r\n                 ticks: {\r\n                   stepSize: 1\r\n                 }\r\n               },\r\n               x: {\r\n                 grid: {\r\n                   display: false\r\n                 }\r\n               }\r\n             }\r\n          }\r\n        })\r\n      }\r\n\r\n      // Buildings Chart\r\n      if (buildingsChart.value) {\r\n        // Calculate building statistics for the chart\r\n        const buildingStats = buildings.value.map(building => {\r\n          const buildingApartments = apartments.value.filter(apt => \r\n            apt.BuildingName === building.BuildingName || \r\n            apt.buildingName === building.BuildingName\r\n          )\r\n          const buildingCheques = cheques.value.filter(cheque => \r\n            cheque.BuildingName === building.BuildingName || \r\n            cheque.buildingName === building.BuildingName\r\n          )\r\n          const totalAmount = buildingCheques.reduce((sum, cheque) => sum + (cheque.Amount || 0), 0)\r\n          \r\n          return {\r\n            name: building.BuildingName,\r\n            apartments: buildingApartments.length,\r\n            cheques: buildingCheques.length,\r\n            amount: totalAmount\r\n          }\r\n        })\r\n\r\n        // Sort by amount (highest first) and take top 5 for better chart readability\r\n        const topBuildings = buildingStats\r\n          .sort((a, b) => b.amount - a.amount)\r\n          .slice(0, 5)\r\n\r\n        new Chart(buildingsChart.value, {\r\n          type: 'doughnut',\r\n          data: {\r\n            labels: topBuildings.map(b => b.name),\r\n            datasets: [{\r\n              data: topBuildings.map(b => b.amount),\r\n              backgroundColor: [\r\n                'rgb(59, 130, 246)',   // Blue\r\n                'rgb(16, 185, 129)',   // Green\r\n                'rgb(245, 158, 11)',   // Yellow\r\n                'rgb(239, 68, 68)',    // Red\r\n                'rgb(139, 92, 246)'    // Purple\r\n              ]\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                  usePointStyle: true,\r\n                  padding: 20\r\n                }\r\n              },\r\n              tooltip: {\r\n                callbacks: {\r\n                  label: function(context) {\r\n                    const building = topBuildings[context.dataIndex]\r\n                    return [\r\n                      `Building: ${building.name}`,\r\n                      `Total Amount: $${building.amount.toLocaleString()}`,\r\n                      `Apartments: ${building.apartments}`,\r\n                      `Cheques: ${building.cheques}`\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    const refreshData = async () => {\r\n      loading.value = true\r\n      try {\r\n        await Promise.all([fetchSummary(), fetchRecentCheques()])\r\n        await createCharts()\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n         const formatCurrency = (amount) => {\r\n       return new Intl.NumberFormat('en-AE', {\r\n         style: 'currency',\r\n         currency: 'AED'\r\n       }).format(amount || 0)\r\n     }\r\n\r\n    const formatDate = (dateString) => {\r\n      try {\r\n        return format(parseISO(dateString), 'MMM dd, yyyy')\r\n      } catch {\r\n        return dateString\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await refreshData()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      summary,\r\n      recentCheques,\r\n      buildings,\r\n      apartments,\r\n      cheques,\r\n      chequesChart,\r\n      buildingsChart,\r\n      refreshData,\r\n      formatCurrency,\r\n      formatDate\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAA4C;;EAOhDA,KAAK,EAAC;AAAc;;;;EAMDA,KAAK,EAAC,4CAA4C;EAACC,KAAK,EAAC,4BAA4B;EAACC,IAAI,EAAC,MAAM;EAACC,OAAO,EAAC;;;;EAIlHH,KAAK,EAAC,oBAAoB;EAACE,IAAI,EAAC,MAAM;EAACE,MAAM,EAAC,cAAc;EAACD,OAAO,EAAC;;;EASlFH,KAAK,EAAC;AAAsD;;EAC1DA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAmB;;EAQvBA,KAAK,EAAC;AAAiB;;EAGpBA,KAAK,EAAC;AAAmC;;EAMhDA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAmB;;EASvBA,KAAK,EAAC;AAAiB;;EAGpBA,KAAK,EAAC;AAAmC;;EAMhDA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAmB;;EAQvBA,KAAK,EAAC;AAAiB;;EAGpBA,KAAK,EAAC;AAAmC;;EAMhDA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAmB;;EAQvBA,KAAK,EAAC;AAAiB;;EAGpBA,KAAK,EAAC;AAAmC;;EAQlDA,KAAK,EAAC;AAAuC;;EAE3CA,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAM;;EACPK,GAAG,EAAC;AAAc;;EAKzBL,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAM;;EACPK,GAAG,EAAC;AAAgB;;EAM7BL,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAqC;;EAUzCA,KAAK,EAAC;AAAmC;;EAExCA,KAAK,EAAC;AAAmD;;EAGzDA,KAAK,EAAC;AAAmD;;EAGzDA,KAAK,EAAC;AAAmD;;EAGzDA,KAAK,EAAC;AAAmD;;EAGzDA,KAAK,EAAC;AAAmD;;uBAtJzEM,mBAAA,CA8JM,OA9JNC,UA8JM,GA7JJC,mBAAA,iBAAoB,EACpBC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJD,mBAAA,CAKM,cAJJA,mBAAA,CAAoE;IAAhET,KAAK,EAAC;EAAkC,GAAC,oBAAkB,GAC/DS,mBAAA,CAEI;IAFDT,KAAK,EAAC;EAA4B,GAAC,iEAEtC,E,qBAEFS,mBAAA,CAeM,OAfNE,UAeM,GAdJF,mBAAA,CAaS;IAZNG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,WAAA,IAAAD,MAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAClBG,QAAQ,EAAEF,MAAA,CAAAG,OAAO;IAClBlB,KAAK,EAAC;MAEKe,MAAA,CAAAG,OAAO,I,cAAlBZ,mBAAA,CAGM,OAHNa,UAGM,OAAAN,MAAA,QAAAA,MAAA,OAFJJ,mBAAA,CAAkG;IAA1FT,KAAK,EAAC,YAAY;IAACoB,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAAClB,MAAM,EAAC,cAAc;IAAC,cAAY,EAAC;6BACrFK,mBAAA,CAAwK;IAAlKT,KAAK,EAAC,YAAY;IAACE,IAAI,EAAC,cAAc;IAACqB,CAAC,EAAC;mDAEjDjB,mBAAA,CAEM,OAFNkB,UAEM,OAAAX,MAAA,QAAAA,MAAA,OADJJ,mBAAA,CAA6L;IAAvL,gBAAc,EAAC,OAAO;IAAC,iBAAe,EAAC,OAAO;IAAC,cAAY,EAAC,GAAG;IAACc,CAAC,EAAC;8EACpE,WAER,oB,kCAIJf,mBAAA,mBAAsB,EACtBC,mBAAA,CAyEM,OAzENgB,UAyEM,GAxEJhB,mBAAA,CAgBM,OAhBNiB,UAgBM,GAfJjB,mBAAA,CAcM,OAdNkB,UAcM,G,0BAbJlB,mBAAA,CAMM;IANDT,KAAK,EAAC;EAAe,IACxBS,mBAAA,CAIM;IAJDT,KAAK,EAAC;EAAoE,IAC7ES,mBAAA,CAEM;IAFDT,KAAK,EAAC,0BAA0B;IAACE,IAAI,EAAC,MAAM;IAACE,MAAM,EAAC,cAAc;IAACD,OAAO,EAAC;MAC9EM,mBAAA,CAA2N;IAArN,gBAAc,EAAC,OAAO;IAAC,iBAAe,EAAC,OAAO;IAAC,cAAY,EAAC,GAAG;IAACc,CAAC,EAAC;8BAI9Ed,mBAAA,CAKM,OALNmB,WAKM,GAJJnB,mBAAA,CAGK,a,0BAFHA,mBAAA,CAA2E;IAAvET,KAAK,EAAC;EAA4C,GAAC,iBAAe,qBACtES,mBAAA,CAA+E,MAA/EoB,WAA+E,EAAAC,gBAAA,CAA9Bf,MAAA,CAAAgB,OAAO,CAACC,cAAc,iB,SAM/EvB,mBAAA,CAiBM,OAjBNwB,WAiBM,GAhBJxB,mBAAA,CAeM,OAfNyB,WAeM,G,qiBANJzB,mBAAA,CAKM,OALN0B,WAKM,GAJJ1B,mBAAA,CAGK,a,0BAFHA,mBAAA,CAA4E;IAAxET,KAAK,EAAC;EAA4C,GAAC,kBAAgB,qBACvES,mBAAA,CAAgF,MAAhF2B,WAAgF,EAAAN,gBAAA,CAA/Bf,MAAA,CAAAgB,OAAO,CAACM,eAAe,iB,SAMhF5B,mBAAA,CAgBM,OAhBN6B,WAgBM,GAfJ7B,mBAAA,CAcM,OAdN8B,WAcM,G,4BAbJ9B,mBAAA,CAMM;IANDT,KAAK,EAAC;EAAe,IACxBS,mBAAA,CAIM;IAJDT,KAAK,EAAC;EAAmE,IAC5ES,mBAAA,CAEM;IAFDT,KAAK,EAAC,yBAAyB;IAACE,IAAI,EAAC,MAAM;IAACE,MAAM,EAAC,cAAc;IAACD,OAAO,EAAC;MAC7EM,mBAAA,CAAsM;IAAhM,gBAAc,EAAC,OAAO;IAAC,iBAAe,EAAC,OAAO;IAAC,cAAY,EAAC,GAAG;IAACc,CAAC,EAAC;8BAI9Ed,mBAAA,CAKM,OALN+B,WAKM,GAJJ/B,mBAAA,CAGK,a,0BAFHA,mBAAA,CAAyE;IAArET,KAAK,EAAC;EAA4C,GAAC,eAAa,qBACpES,mBAAA,CAA6E,MAA7EgC,WAA6E,EAAAX,gBAAA,CAA5Bf,MAAA,CAAAgB,OAAO,CAACW,YAAY,iB,SAM7EjC,mBAAA,CAgBM,OAhBNkC,WAgBM,GAfJlC,mBAAA,CAcM,OAdNmC,WAcM,G,4BAbJnC,mBAAA,CAMM;IANDT,KAAK,EAAC;EAAe,IACxBS,mBAAA,CAIM;IAJDT,KAAK,EAAC;EAAmE,IAC5ES,mBAAA,CAEM;IAFDT,KAAK,EAAC,yBAAyB;IAACE,IAAI,EAAC,MAAM;IAACE,MAAM,EAAC,cAAc;IAACD,OAAO,EAAC;MAC7EM,mBAAA,CAA2N;IAArN,gBAAc,EAAC,OAAO;IAAC,iBAAe,EAAC,OAAO;IAAC,cAAY,EAAC,GAAG;IAACc,CAAC,EAAC;8BAI9Ed,mBAAA,CAKM,OALNoC,WAKM,GAJJpC,mBAAA,CAGK,a,4BAFHA,mBAAA,CAAwE;IAApET,KAAK,EAAC;EAA4C,GAAC,cAAY,qBACnES,mBAAA,CAA4F,MAA5FqC,WAA4F,EAAAhB,gBAAA,CAA3Cf,MAAA,CAAAgC,cAAc,CAAChC,MAAA,CAAAgB,OAAO,CAACiB,WAAW,kB,WAO7FxC,mBAAA,oBAAuB,EACvBC,mBAAA,CAgBM,OAhBNwC,WAgBM,GAfJzC,mBAAA,4BAA+B,EAC/BC,mBAAA,CAKM,OALNyC,WAKM,G,4BAJJzC,mBAAA,CAAwE;IAApET,KAAK,EAAC;EAAwC,GAAC,kBAAgB,qBACnES,mBAAA,CAEM,OAFN0C,WAEM,GADJ1C,mBAAA,CAAoC,UAApC2C,WAAoC,8B,KAIxC5C,mBAAA,kCAAqC,EACrCC,mBAAA,CAKM,OALN4C,WAKM,G,4BAJJ5C,mBAAA,CAA0E;IAAtET,KAAK,EAAC;EAAwC,GAAC,oBAAkB,qBACrES,mBAAA,CAEM,OAFN6C,WAEM,GADJ7C,mBAAA,CAAsC,UAAtC8C,WAAsC,8B,OAK5C/C,mBAAA,qBAAwB,EACxBC,mBAAA,CAkCM,OAlCN+C,WAkCM,G,4BAjCJ/C,mBAAA,CAAsE;IAAlET,KAAK,EAAC;EAAwC,GAAC,gBAAc,qBACjES,mBAAA,CA+BM,OA/BNgD,WA+BM,GA9BJhD,mBAAA,CA6BQ,SA7BRiD,WA6BQ,G,4BA5BNjD,mBAAA,CAQQ;IARDT,KAAK,EAAC;EAAY,IACvBS,mBAAA,CAMK,aALHA,mBAAA,CAAoG;IAAhGT,KAAK,EAAC;EAAgF,GAAC,MAAI,GAC/FS,mBAAA,CAAwG;IAApGT,KAAK,EAAC;EAAgF,GAAC,UAAQ,GACnGS,mBAAA,CAAyG;IAArGT,KAAK,EAAC;EAAgF,GAAC,WAAS,GACpGS,mBAAA,CAAyG;IAArGT,KAAK,EAAC;EAAgF,GAAC,WAAS,GACpGS,mBAAA,CAAsG;IAAlGT,KAAK,EAAC;EAAgF,GAAC,QAAM,E,uBAGrGS,mBAAA,CAkBQ,SAlBRkD,WAkBQ,I,kBAjBNrD,mBAAA,CAgBKsD,SAAA,QAAAC,WAAA,CAhBgB9C,MAAA,CAAA+C,aAAa,EAAvBC,MAAM;yBAAjBzD,mBAAA,CAgBK;MAhBgC0D,GAAG,EAAED,MAAM,CAACE,QAAQ;MAAEjE,KAAK,EAAC;QAC/DS,mBAAA,CAEK,MAFLyD,WAEK,EAAApC,gBAAA,CADAf,MAAA,CAAAoD,UAAU,CAACJ,MAAM,CAACK,UAAU,mBAEjC3D,mBAAA,CAEK,MAFL4D,WAEK,EAAAvC,gBAAA,CADAiC,MAAM,CAACO,YAAY,kBAExB7D,mBAAA,CAEK,MAFL8D,WAEK,EAAAzC,gBAAA,CADAiC,MAAM,CAACS,aAAa,kBAEzB/D,mBAAA,CAEK,MAFLgE,WAEK,EAAA3C,gBAAA,CADAiC,MAAM,CAACW,QAAQ,kBAEpBjE,mBAAA,CAEK,MAFLkE,WAEK,EAAA7C,gBAAA,CADAf,MAAA,CAAAgC,cAAc,CAACgB,MAAM,CAACa,MAAM,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}