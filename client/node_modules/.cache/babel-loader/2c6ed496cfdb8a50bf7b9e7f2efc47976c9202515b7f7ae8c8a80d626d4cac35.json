{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport Dashboard from '../views/Dashboard.vue';\nimport ChequesDetail from '../views/ChequesDetail.vue';\nimport Buildings from '../views/Buildings.vue';\nimport Apartments from '../views/Apartments.vue';\nimport Login from '../views/Login.vue';\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/',\n  name: 'Dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/cheques',\n  name: 'ChequesDetail',\n  component: ChequesDetail,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/buildings',\n  name: 'Buildings',\n  component: Buildings,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/apartments',\n  name: 'Apartments',\n  component: Apartments,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  redirect: '/login'\n}];\nconst router = createRouter({\n  history: createWebHashHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation guard for authentication\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n\n  // If not authenticated and trying to access protected route, redirect to login\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next('/login');\n  }\n  // If already authenticated and trying to access login, redirect to dashboard\n  else if (to.path === '/login' && isAuthenticated) {\n    next('/');\n  }\n  // If accessing root path without authentication, redirect to login\n  else if (to.path === '/' && !isAuthenticated) {\n    next('/login');\n  }\n  // Otherwise, proceed\n  else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","Dashboard","ChequesDetail","Buildings","Apartments","Login","routes","path","name","component","meta","requiresAuth","redirect","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","localStorage","getItem"],"sources":["D:/Workplace/V2R/V2R_ChequesDashboard/client/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\r\nimport Dashboard from '../views/Dashboard.vue'\r\nimport ChequesDetail from '../views/ChequesDetail.vue'\r\nimport Buildings from '../views/Buildings.vue'\r\nimport Apartments from '../views/Apartments.vue'\r\nimport Login from '../views/Login.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'Dashboard',\r\n    component: Dashboard,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/cheques',\r\n    name: 'ChequesDetail',\r\n    component: ChequesDetail,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/buildings',\r\n    name: 'Buildings',\r\n    component: Buildings,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/apartments',\r\n    name: 'Apartments',\r\n    component: Apartments,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/:pathMatch(.*)*',\r\n    redirect: '/login'\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// Navigation guard for authentication\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true'\r\n  \r\n  // If not authenticated and trying to access protected route, redirect to login\r\n  if (to.meta.requiresAuth && !isAuthenticated) {\r\n    next('/login')\r\n  } \r\n  // If already authenticated and trying to access login, redirect to dashboard\r\n  else if (to.path === '/login' && isAuthenticated) {\r\n    next('/')\r\n  } \r\n  // If accessing root path without authentication, redirect to login\r\n  else if (to.path === '/' && !isAuthenticated) {\r\n    next('/login')\r\n  }\r\n  // Otherwise, proceed\r\n  else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAC/D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEJ;AACb,CAAC,EACD;EACEE,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAER,SAAS;EACpBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEP,aAAa;EACxBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEL,UAAU;EACrBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,kBAAkB;EACxBK,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,oBAAoB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EACnDX;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;;EAE1E;EACA,IAAIL,EAAE,CAACT,IAAI,CAACC,YAAY,IAAI,CAACW,eAAe,EAAE;IAC5CD,IAAI,CAAC,QAAQ,CAAC;EAChB;EACA;EAAA,KACK,IAAIF,EAAE,CAACZ,IAAI,KAAK,QAAQ,IAAIe,eAAe,EAAE;IAChDD,IAAI,CAAC,GAAG,CAAC;EACX;EACA;EAAA,KACK,IAAIF,EAAE,CAACZ,IAAI,KAAK,GAAG,IAAI,CAACe,eAAe,EAAE;IAC5CD,IAAI,CAAC,QAAQ,CAAC;EAChB;EACA;EAAA,KACK;IACHA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}