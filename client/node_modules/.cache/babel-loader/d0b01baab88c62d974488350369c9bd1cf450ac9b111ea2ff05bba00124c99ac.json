{"ast":null,"code":"import { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport { format, parseISO } from 'date-fns';\nexport default {\n  name: 'ChequesDetail',\n  setup() {\n    const loading = ref(false);\n    const cheques = ref([]);\n    const buildings = ref([]);\n    const apartments = ref([]);\n    const summary = ref({});\n    const filters = ref({\n      fromDate: '',\n      toDate: '',\n      buildingId: '',\n      apartmentId: ''\n    });\n    const searchTerm = ref('');\n    const currentPage = ref(1);\n    const itemsPerPage = 20;\n    const filteredApartments = computed(() => {\n      if (!filters.value.buildingId) return [];\n      return apartments.value.filter(apt => apt.BuildingID === filters.value.buildingId);\n    });\n    const filteredCheques = computed(() => {\n      let filtered = cheques.value;\n\n      // Apply search filter\n      if (searchTerm.value) {\n        const term = searchTerm.value.toLowerCase();\n        filtered = filtered.filter(cheque => cheque.ChequeNo?.toLowerCase().includes(term) || cheque.BuildingName?.toLowerCase().includes(term) || cheque.ApartmentName?.toLowerCase().includes(term));\n      }\n      return filtered;\n    });\n    const totalCheques = computed(() => filteredCheques.value);\n    const totalPages = computed(() => Math.ceil(totalCheques.value.length / itemsPerPage));\n    const startIndex = computed(() => (currentPage.value - 1) * itemsPerPage);\n    const endIndex = computed(() => Math.min(startIndex.value + itemsPerPage, totalCheques.value.length));\n    const averageAmount = computed(() => {\n      // Debug logging to see what's in summary\n      console.log('Summary data:', summary.value);\n      console.log('Cheques data length:', cheques.value.length);\n\n      // Try to get from summary first\n      let numberOfCheques = summary.value?.NumberOfCheques || summary.value?.numberOfCheques || 0;\n      let totalAmount = summary.value?.TotalAmount || summary.value?.totalAmount || 0;\n\n      // Fallback: calculate from cheques data if summary is empty\n      if (!numberOfCheques && cheques.value.length > 0) {\n        numberOfCheques = cheques.value.length;\n        totalAmount = cheques.value.reduce((sum, cheque) => sum + (cheque.Amount || 0), 0);\n        console.log('Calculated from cheques:', {\n          numberOfCheques,\n          totalAmount\n        });\n      }\n      if (!numberOfCheques || numberOfCheques === 0) return 0;\n      return totalAmount / numberOfCheques;\n    });\n    const fetchData = async () => {\n      loading.value = true;\n      try {\n        const [buildingsRes, apartmentsRes, chequesRes, summaryRes] = await Promise.all([axios.get('/api/buildings'), axios.get('/api/apartments'), axios.get('/api/cheques/detail'), axios.get('/api/cheques/summary')]);\n        buildings.value = buildingsRes.data;\n        apartments.value = apartmentsRes.data;\n        cheques.value = chequesRes.data;\n        summary.value = summaryRes.data;\n\n        // Debug logging\n        console.log('Buildings data:', buildingsRes.data);\n        console.log('Apartments data:', apartmentsRes.data);\n        console.log('Cheques data:', chequesRes.data);\n        console.log('Summary data:', summaryRes.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const applyFilters = async () => {\n      loading.value = true;\n      try {\n        const params = {};\n        if (filters.value.fromDate) params.fromDate = filters.value.fromDate;\n        if (filters.value.toDate) params.toDate = filters.value.toDate;\n        if (filters.value.buildingId) params.buildingId = filters.value.buildingId;\n        if (filters.value.apartmentId) params.apartmentId = filters.value.apartmentId;\n        const [chequesRes, summaryRes] = await Promise.all([axios.get('/api/cheques/detail', {\n          params\n        }), axios.get('/api/cheques/summary', {\n          params\n        })]);\n        cheques.value = chequesRes.data;\n        summary.value = summaryRes.data;\n        currentPage.value = 1;\n      } catch (error) {\n        console.error('Error applying filters:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const clearFilters = () => {\n      filters.value = {\n        fromDate: '',\n        toDate: '',\n        buildingId: '',\n        apartmentId: ''\n      };\n      searchTerm.value = '';\n      fetchData();\n    };\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const exportData = () => {\n      const csvContent = generateCSV(filteredCheques.value);\n      const blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'cheques_export.csv';\n      link.click();\n    };\n    const generateCSV = data => {\n      const headers = ['Date', 'Building', 'Apartment', 'Cheque No', 'Amount'];\n      const rows = data.map(cheque => [formatDate(cheque.ChequeDate), cheque.BuildingName, cheque.ApartmentName, cheque.ChequeNo, cheque.Amount]);\n      return [headers, ...rows].map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n    };\n    const formatCurrency = amount => {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(amount || 0);\n    };\n    const formatDate = dateString => {\n      try {\n        return format(parseISO(dateString), 'MMM dd, yyyy');\n      } catch {\n        return dateString;\n      }\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    watch(filters, () => {\n      if (filters.value.buildingId && filters.value.apartmentId) {\n        filters.value.apartmentId = '';\n      }\n    });\n    return {\n      loading,\n      cheques,\n      buildings,\n      apartments,\n      summary,\n      filters,\n      searchTerm,\n      currentPage,\n      totalPages,\n      startIndex,\n      endIndex,\n      averageAmount,\n      filteredApartments,\n      filteredCheques,\n      totalCheques,\n      applyFilters,\n      clearFilters,\n      previousPage,\n      nextPage,\n      exportData,\n      formatCurrency,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","axios","format","parseISO","name","setup","loading","cheques","buildings","apartments","summary","filters","fromDate","toDate","buildingId","apartmentId","searchTerm","currentPage","itemsPerPage","filteredApartments","value","filter","apt","BuildingID","filteredCheques","filtered","term","toLowerCase","cheque","ChequeNo","includes","BuildingName","ApartmentName","totalCheques","totalPages","Math","ceil","length","startIndex","endIndex","min","averageAmount","console","log","numberOfCheques","NumberOfCheques","totalAmount","TotalAmount","reduce","sum","Amount","fetchData","buildingsRes","apartmentsRes","chequesRes","summaryRes","Promise","all","get","data","error","applyFilters","params","clearFilters","previousPage","nextPage","exportData","csvContent","generateCSV","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","headers","rows","map","formatDate","ChequeDate","row","cell","join","formatCurrency","amount","Intl","NumberFormat","style","currency","dateString"],"sources":["D:\\Workplace\\V2R\\V2R_ChequesDashboard\\client\\src\\views\\ChequesDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"space-y-6\">\r\n    <!-- Page Header -->\r\n    <div class=\"sm:flex sm:items-center sm:justify-between\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold text-gray-900\">Cheques Detail</h1>\r\n        <p class=\"mt-2 text-sm text-gray-700\">\r\n          View and filter detailed cheque information\r\n        </p>\r\n      </div>\r\n      <div class=\"mt-4 sm:mt-0\">\r\n        <button \r\n          @click=\"exportData\"\r\n          :disabled=\"loading\"\r\n          class=\"btn-secondary inline-flex items-center\"\r\n        >\r\n          <svg class=\"-ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n          </svg>\r\n          Export\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Filters -->\r\n    <div class=\"card\">\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Filters</h3>\r\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">From Date</label>\r\n          <input \r\n            type=\"date\" \r\n            v-model=\"filters.fromDate\"\r\n            class=\"input-field\"\r\n            @change=\"applyFilters\"\r\n          >\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">To Date</label>\r\n          <input \r\n            type=\"date\" \r\n            v-model=\"filters.toDate\"\r\n            class=\"input-field\"\r\n            @change=\"applyFilters\"\r\n          >\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Building</label>\r\n          <select \r\n            v-model=\"filters.buildingId\"\r\n            class=\"input-field\"\r\n            @change=\"applyFilters\"\r\n          >\r\n            <option value=\"\">All Buildings</option>\r\n            <option \r\n              v-for=\"building in buildings\" \r\n              :key=\"building.BuildingID\" \r\n              :value=\"building.BuildingID\"\r\n            >\r\n              {{ building.BuildingName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Apartment</label>\r\n          <select \r\n            v-model=\"filters.apartmentId\"\r\n            class=\"input-field\"\r\n            @change=\"applyFilters\"\r\n            :disabled=\"!filters.buildingId\"\r\n          >\r\n            <option value=\"\">All Apartments</option>\r\n            <option \r\n              v-for=\"apartment in filteredApartments\" \r\n              :key=\"apartment.ApartmentID\" \r\n              :value=\"apartment.ApartmentID\"\r\n            >\r\n              {{ apartment.ApartmentName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button \r\n          @click=\"clearFilters\"\r\n          class=\"btn-secondary mr-2\"\r\n        >\r\n          Clear Filters\r\n        </button>\r\n        <button \r\n          @click=\"applyFilters\"\r\n          :disabled=\"loading\"\r\n          class=\"btn-primary\"\r\n        >\r\n          Apply Filters\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Summary Cards -->\r\n    <div class=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Cheques</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ (summary.NumberOfCheques || summary.numberOfCheques || cheques.length || 0) }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Amount</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ formatCurrency(summary.TotalAmount || summary.totalAmount || 0) }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Average Amount</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ formatCurrency(averageAmount) }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Data Table -->\r\n    <div class=\"card\">\r\n      <div class=\"sm:flex sm:items-center sm:justify-between mb-4\">\r\n        <h3 class=\"text-lg font-medium text-gray-900\">Cheques Data</h3>\r\n        <div class=\"mt-3 sm:mt-0 sm:ml-4\">\r\n          <div class=\"flex rounded-md shadow-sm\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"searchTerm\"\r\n              placeholder=\"Search cheques...\"\r\n              class=\"input-field rounded-r-none\"\r\n            >\r\n            <button class=\"btn-primary rounded-l-none\">\r\n              <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Building</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Apartment</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Cheque No</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"cheque in filteredCheques\" :key=\"cheque.ChequeID\" class=\"hover:bg-gray-50\">\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ formatDate(cheque.ChequeDate) }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.BuildingName }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.ApartmentName }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.ChequeNo }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ formatCurrency(cheque.Amount) }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                  Active\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <div class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n        <div class=\"flex-1 flex justify-between sm:hidden\">\r\n          <button \r\n            @click=\"previousPage\"\r\n            :disabled=\"currentPage === 1\"\r\n            class=\"btn-secondary\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button \r\n            @click=\"nextPage\"\r\n            :disabled=\"currentPage === totalPages\"\r\n            class=\"btn-primary\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n        <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n          <div>\r\n            <p class=\"text-sm text-gray-700\">\r\n              Showing \r\n              <span class=\"font-medium\">{{ startIndex + 1 }}</span>\r\n              to \r\n              <span class=\"font-medium\">{{ endIndex }}</span>\r\n              of \r\n              <span class=\"font-medium\">{{ totalCheques.length }}</span>\r\n              results\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\r\n              <button \r\n                @click=\"previousPage\"\r\n                :disabled=\"currentPage === 1\"\r\n                class=\"btn-secondary rounded-l-md\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button \r\n                @click=\"nextPage\"\r\n                :disabled=\"currentPage === totalPages\"\r\n                class=\"btn-primary rounded-r-md\"\r\n              >\r\n                Next\r\n              </button>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport axios from 'axios'\r\nimport { format, parseISO } from 'date-fns'\r\n\r\nexport default {\r\n  name: 'ChequesDetail',\r\n  setup() {\r\n    const loading = ref(false)\r\n    const cheques = ref([])\r\n    const buildings = ref([])\r\n    const apartments = ref([])\r\n    const summary = ref({})\r\n    \r\n    const filters = ref({\r\n      fromDate: '',\r\n      toDate: '',\r\n      buildingId: '',\r\n      apartmentId: ''\r\n    })\r\n    \r\n    const searchTerm = ref('')\r\n    const currentPage = ref(1)\r\n    const itemsPerPage = 20\r\n\r\n    const filteredApartments = computed(() => {\r\n      if (!filters.value.buildingId) return []\r\n      return apartments.value.filter(apt => apt.BuildingID === filters.value.buildingId)\r\n    })\r\n\r\n    const filteredCheques = computed(() => {\r\n      let filtered = cheques.value\r\n\r\n      // Apply search filter\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase()\r\n        filtered = filtered.filter(cheque => \r\n          cheque.ChequeNo?.toLowerCase().includes(term) ||\r\n          cheque.BuildingName?.toLowerCase().includes(term) ||\r\n          cheque.ApartmentName?.toLowerCase().includes(term)\r\n        )\r\n      }\r\n\r\n      return filtered\r\n    })\r\n\r\n    const totalCheques = computed(() => filteredCheques.value)\r\n    const totalPages = computed(() => Math.ceil(totalCheques.value.length / itemsPerPage))\r\n    const startIndex = computed(() => (currentPage.value - 1) * itemsPerPage)\r\n    const endIndex = computed(() => Math.min(startIndex.value + itemsPerPage, totalCheques.value.length))\r\n    const averageAmount = computed(() => {\r\n      // Debug logging to see what's in summary\r\n      console.log('Summary data:', summary.value)\r\n      console.log('Cheques data length:', cheques.value.length)\r\n      \r\n      // Try to get from summary first\r\n      let numberOfCheques = summary.value?.NumberOfCheques || summary.value?.numberOfCheques || 0\r\n      let totalAmount = summary.value?.TotalAmount || summary.value?.totalAmount || 0\r\n      \r\n      // Fallback: calculate from cheques data if summary is empty\r\n      if (!numberOfCheques && cheques.value.length > 0) {\r\n        numberOfCheques = cheques.value.length\r\n        totalAmount = cheques.value.reduce((sum, cheque) => sum + (cheque.Amount || 0), 0)\r\n        console.log('Calculated from cheques:', { numberOfCheques, totalAmount })\r\n      }\r\n      \r\n      if (!numberOfCheques || numberOfCheques === 0) return 0\r\n      return totalAmount / numberOfCheques\r\n    })\r\n\r\n    const fetchData = async () => {\r\n      loading.value = true\r\n      try {\r\n        const [buildingsRes, apartmentsRes, chequesRes, summaryRes] = await Promise.all([\r\n          axios.get('/api/buildings'),\r\n          axios.get('/api/apartments'),\r\n          axios.get('/api/cheques/detail'),\r\n          axios.get('/api/cheques/summary')\r\n        ])\r\n\r\n        buildings.value = buildingsRes.data\r\n        apartments.value = apartmentsRes.data\r\n        cheques.value = chequesRes.data\r\n        summary.value = summaryRes.data\r\n        \r\n        // Debug logging\r\n        console.log('Buildings data:', buildingsRes.data)\r\n        console.log('Apartments data:', apartmentsRes.data)\r\n        console.log('Cheques data:', chequesRes.data)\r\n        console.log('Summary data:', summaryRes.data)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const applyFilters = async () => {\r\n      loading.value = true\r\n      try {\r\n        const params = {}\r\n        if (filters.value.fromDate) params.fromDate = filters.value.fromDate\r\n        if (filters.value.toDate) params.toDate = filters.value.toDate\r\n        if (filters.value.buildingId) params.buildingId = filters.value.buildingId\r\n        if (filters.value.apartmentId) params.apartmentId = filters.value.apartmentId\r\n\r\n        const [chequesRes, summaryRes] = await Promise.all([\r\n          axios.get('/api/cheques/detail', { params }),\r\n          axios.get('/api/cheques/summary', { params })\r\n        ])\r\n\r\n        cheques.value = chequesRes.data\r\n        summary.value = summaryRes.data\r\n        currentPage.value = 1\r\n      } catch (error) {\r\n        console.error('Error applying filters:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const clearFilters = () => {\r\n      filters.value = {\r\n        fromDate: '',\r\n        toDate: '',\r\n        buildingId: '',\r\n        apartmentId: ''\r\n      }\r\n      searchTerm.value = ''\r\n      fetchData()\r\n    }\r\n\r\n    const previousPage = () => {\r\n      if (currentPage.value > 1) {\r\n        currentPage.value--\r\n      }\r\n    }\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) {\r\n        currentPage.value++\r\n      }\r\n    }\r\n\r\n    const exportData = () => {\r\n      const csvContent = generateCSV(filteredCheques.value)\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\r\n      const link = document.createElement('a')\r\n      link.href = URL.createObjectURL(blob)\r\n      link.download = 'cheques_export.csv'\r\n      link.click()\r\n    }\r\n\r\n    const generateCSV = (data) => {\r\n      const headers = ['Date', 'Building', 'Apartment', 'Cheque No', 'Amount']\r\n      const rows = data.map(cheque => [\r\n        formatDate(cheque.ChequeDate),\r\n        cheque.BuildingName,\r\n        cheque.ApartmentName,\r\n        cheque.ChequeNo,\r\n        cheque.Amount\r\n      ])\r\n      \r\n      return [headers, ...rows]\r\n        .map(row => row.map(cell => `\"${cell}\"`).join(','))\r\n        .join('\\n')\r\n    }\r\n\r\n    const formatCurrency = (amount) => {\r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n      }).format(amount || 0)\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n      try {\r\n        return format(parseISO(dateString), 'MMM dd, yyyy')\r\n      } catch {\r\n        return dateString\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchData()\r\n    })\r\n\r\n    watch(filters, () => {\r\n      if (filters.value.buildingId && filters.value.apartmentId) {\r\n        filters.value.apartmentId = ''\r\n      }\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      cheques,\r\n      buildings,\r\n      apartments,\r\n      summary,\r\n      filters,\r\n      searchTerm,\r\n      currentPage,\r\n      totalPages,\r\n      startIndex,\r\n      endIndex,\r\n      averageAmount,\r\n      filteredApartments,\r\n      filteredCheques,\r\n      totalCheques,\r\n      applyFilters,\r\n      clearFilters,\r\n      previousPage,\r\n      nextPage,\r\n      exportData,\r\n      formatCurrency,\r\n      formatDate\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}