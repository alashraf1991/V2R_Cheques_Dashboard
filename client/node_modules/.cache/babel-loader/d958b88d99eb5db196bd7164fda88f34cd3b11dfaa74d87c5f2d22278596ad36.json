{"ast":null,"code":"import { ref, onMounted, nextTick } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios';\nimport { format, parseISO } from 'date-fns';\nChart.register(...registerables);\nexport default {\n  name: 'Dashboard',\n  setup() {\n    const loading = ref(false);\n    const summary = ref({\n      totalBuildings: 0,\n      totalApartments: 0,\n      totalCheques: 0,\n      totalAmount: 0\n    });\n    const recentCheques = ref([]);\n    const chequesChart = ref(null);\n    const buildingsChart = ref(null);\n    const fetchSummary = async () => {\n      try {\n        const [buildingsRes, apartmentsRes, chequesRes] = await Promise.all([axios.get('/api/buildings'), axios.get('/api/apartments'), axios.get('/api/cheques/summary')]);\n        summary.value = {\n          totalBuildings: buildingsRes.data.length,\n          totalApartments: apartmentsRes.data.length,\n          totalCheques: chequesRes.data.NumberOfCheques || 0,\n          totalAmount: chequesRes.data.TotalAmount || 0\n        };\n      } catch (error) {\n        console.error('Error fetching summary:', error);\n      }\n    };\n    const fetchRecentCheques = async () => {\n      try {\n        const response = await axios.get('/api/cheques/detail');\n        recentCheques.value = response.data.slice(0, 10); // Get first 10\n      } catch (error) {\n        console.error('Error fetching recent cheques:', error);\n      }\n    };\n    const createCharts = async () => {\n      await nextTick();\n\n      // Cheques by Month Chart\n      if (chequesChart.value) {\n        new Chart(chequesChart.value, {\n          type: 'line',\n          data: {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n            datasets: [{\n              label: 'Cheques Count',\n              data: [12, 19, 3, 5, 2, 3],\n              borderColor: 'rgb(59, 130, 246)',\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\n              tension: 0.4\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      }\n\n      // Buildings Chart\n      if (buildingsChart.value) {\n        new Chart(buildingsChart.value, {\n          type: 'doughnut',\n          data: {\n            labels: ['Building A', 'Building B', 'Building C'],\n            datasets: [{\n              data: [300, 50, 100],\n              backgroundColor: ['rgb(59, 130, 246)', 'rgb(16, 185, 129)', 'rgb(245, 158, 11)']\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        });\n      }\n    };\n    const refreshData = async () => {\n      loading.value = true;\n      try {\n        await Promise.all([fetchSummary(), fetchRecentCheques()]);\n        await createCharts();\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatCurrency = amount => {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(amount || 0);\n    };\n    const formatDate = dateString => {\n      try {\n        return format(parseISO(dateString), 'MMM dd, yyyy');\n      } catch {\n        return dateString;\n      }\n    };\n    onMounted(async () => {\n      await refreshData();\n    });\n    return {\n      loading,\n      summary,\n      recentCheques,\n      chequesChart,\n      buildingsChart,\n      refreshData,\n      formatCurrency,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","Chart","registerables","axios","format","parseISO","register","name","setup","loading","summary","totalBuildings","totalApartments","totalCheques","totalAmount","recentCheques","chequesChart","buildingsChart","fetchSummary","buildingsRes","apartmentsRes","chequesRes","Promise","all","get","value","data","length","NumberOfCheques","TotalAmount","error","console","fetchRecentCheques","response","slice","createCharts","type","labels","datasets","label","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","plugins","legend","display","scales","y","beginAtZero","position","refreshData","formatCurrency","amount","Intl","NumberFormat","style","currency","formatDate","dateString"],"sources":["D:\\Workplace\\V2R\\V2R_ChequesDashboard\\client\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"space-y-6\">\r\n    <!-- Page Header -->\r\n    <div class=\"sm:flex sm:items-center sm:justify-between\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold text-gray-900\">Dashboard Overview</h1>\r\n        <p class=\"mt-2 text-sm text-gray-700\">\r\n          Real-time overview of your buildings, apartments, and cheques\r\n        </p>\r\n      </div>\r\n      <div class=\"mt-4 sm:mt-0\">\r\n        <button \r\n          @click=\"refreshData\"\r\n          :disabled=\"loading\"\r\n          class=\"btn-primary inline-flex items-center\"\r\n        >\r\n          <svg v-if=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          <svg v-else class=\"-ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n          </svg>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Summary Cards -->\r\n    <div class=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-primary-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Buildings</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ summary.totalBuildings }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5v4m8-4v4M8 11v4m8-4v4\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Apartments</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ summary.totalApartments }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Cheques</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ summary.totalCheques }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"flex-shrink-0\">\r\n            <div class=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n              <svg class=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"ml-5 w-0 flex-1\">\r\n            <dl>\r\n              <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Amount</dt>\r\n              <dd class=\"text-lg font-medium text-gray-900\">{{ formatCurrency(summary.totalAmount) }}</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Charts Section -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      <!-- Cheques by Month Chart -->\r\n      <div class=\"card\">\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Cheques by Month</h3>\r\n        <div class=\"h-64\">\r\n          <canvas ref=\"chequesChart\"></canvas>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Buildings Distribution Chart -->\r\n      <div class=\"card\">\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Buildings Overview</h3>\r\n        <div class=\"h-64\">\r\n          <canvas ref=\"buildingsChart\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Recent Activity -->\r\n    <div class=\"card\">\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Recent Cheques</h3>\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Building</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Apartment</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Cheque No</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"cheque in recentCheques\" :key=\"cheque.ChequeID\" class=\"hover:bg-gray-50\">\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ formatDate(cheque.ChequeDate) }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.BuildingName }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.ApartmentName }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ cheque.ChequeNo }}\r\n              </td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                {{ formatCurrency(cheque.Amount) }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, nextTick } from 'vue'\r\nimport { Chart, registerables } from 'chart.js'\r\nimport axios from 'axios'\r\nimport { format, parseISO } from 'date-fns'\r\n\r\nChart.register(...registerables)\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  setup() {\r\n    const loading = ref(false)\r\n    const summary = ref({\r\n      totalBuildings: 0,\r\n      totalApartments: 0,\r\n      totalCheques: 0,\r\n      totalAmount: 0\r\n    })\r\n    const recentCheques = ref([])\r\n    const chequesChart = ref(null)\r\n    const buildingsChart = ref(null)\r\n\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const [buildingsRes, apartmentsRes, chequesRes] = await Promise.all([\r\n          axios.get('/api/buildings'),\r\n          axios.get('/api/apartments'),\r\n          axios.get('/api/cheques/summary')\r\n        ])\r\n\r\n        summary.value = {\r\n          totalBuildings: buildingsRes.data.length,\r\n          totalApartments: apartmentsRes.data.length,\r\n          totalCheques: chequesRes.data.NumberOfCheques || 0,\r\n          totalAmount: chequesRes.data.TotalAmount || 0\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching summary:', error)\r\n      }\r\n    }\r\n\r\n    const fetchRecentCheques = async () => {\r\n      try {\r\n        const response = await axios.get('/api/cheques/detail')\r\n        recentCheques.value = response.data.slice(0, 10) // Get first 10\r\n      } catch (error) {\r\n        console.error('Error fetching recent cheques:', error)\r\n      }\r\n    }\r\n\r\n    const createCharts = async () => {\r\n      await nextTick()\r\n      \r\n      // Cheques by Month Chart\r\n      if (chequesChart.value) {\r\n        new Chart(chequesChart.value, {\r\n          type: 'line',\r\n          data: {\r\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n            datasets: [{\r\n              label: 'Cheques Count',\r\n              data: [12, 19, 3, 5, 2, 3],\r\n              borderColor: 'rgb(59, 130, 246)',\r\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n              tension: 0.4\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              legend: {\r\n                display: false\r\n              }\r\n            },\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      // Buildings Chart\r\n      if (buildingsChart.value) {\r\n        new Chart(buildingsChart.value, {\r\n          type: 'doughnut',\r\n          data: {\r\n            labels: ['Building A', 'Building B', 'Building C'],\r\n            datasets: [{\r\n              data: [300, 50, 100],\r\n              backgroundColor: [\r\n                'rgb(59, 130, 246)',\r\n                'rgb(16, 185, 129)',\r\n                'rgb(245, 158, 11)'\r\n              ]\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              legend: {\r\n                position: 'bottom'\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    const refreshData = async () => {\r\n      loading.value = true\r\n      try {\r\n        await Promise.all([fetchSummary(), fetchRecentCheques()])\r\n        await createCharts()\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const formatCurrency = (amount) => {\r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n      }).format(amount || 0)\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n      try {\r\n        return format(parseISO(dateString), 'MMM dd, yyyy')\r\n      } catch {\r\n        return dateString\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await refreshData()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      summary,\r\n      recentCheques,\r\n      chequesChart,\r\n      buildingsChart,\r\n      refreshData,\r\n      formatCurrency,\r\n      formatDate\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAmKA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAI;AAC7C,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAS;AAC9C,OAAOC,KAAI,MAAO,OAAM;AACxB,SAASC,MAAM,EAAEC,QAAO,QAAS,UAAS;AAE1CJ,KAAK,CAACK,QAAQ,CAAC,GAAGJ,aAAa;AAE/B,eAAe;EACbK,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIX,GAAG,CAAC,KAAK;IACzB,MAAMY,OAAM,GAAIZ,GAAG,CAAC;MAClBa,cAAc,EAAE,CAAC;MACjBC,eAAe,EAAE,CAAC;MAClBC,YAAY,EAAE,CAAC;MACfC,WAAW,EAAE;IACf,CAAC;IACD,MAAMC,aAAY,GAAIjB,GAAG,CAAC,EAAE;IAC5B,MAAMkB,YAAW,GAAIlB,GAAG,CAAC,IAAI;IAC7B,MAAMmB,cAAa,GAAInB,GAAG,CAAC,IAAI;IAE/B,MAAMoB,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAM,CAACC,YAAY,EAAEC,aAAa,EAAEC,UAAU,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClEpB,KAAK,CAACqB,GAAG,CAAC,gBAAgB,CAAC,EAC3BrB,KAAK,CAACqB,GAAG,CAAC,iBAAiB,CAAC,EAC5BrB,KAAK,CAACqB,GAAG,CAAC,sBAAsB,EACjC;QAEDd,OAAO,CAACe,KAAI,GAAI;UACdd,cAAc,EAAEQ,YAAY,CAACO,IAAI,CAACC,MAAM;UACxCf,eAAe,EAAEQ,aAAa,CAACM,IAAI,CAACC,MAAM;UAC1Cd,YAAY,EAAEQ,UAAU,CAACK,IAAI,CAACE,eAAc,IAAK,CAAC;UAClDd,WAAW,EAAEO,UAAU,CAACK,IAAI,CAACG,WAAU,IAAK;QAC9C;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;MAChD;IACF;IAEA,MAAME,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM9B,KAAK,CAACqB,GAAG,CAAC,qBAAqB;QACtDT,aAAa,CAACU,KAAI,GAAIQ,QAAQ,CAACP,IAAI,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,GAAE;MACnD,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK;MACvD;IACF;IAEA,MAAMK,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,MAAMnC,QAAQ,CAAC;;MAEf;MACA,IAAIgB,YAAY,CAACS,KAAK,EAAE;QACtB,IAAIxB,KAAK,CAACe,YAAY,CAACS,KAAK,EAAE;UAC5BW,IAAI,EAAE,MAAM;UACZV,IAAI,EAAE;YACJW,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YAClDC,QAAQ,EAAE,CAAC;cACTC,KAAK,EAAE,eAAe;cACtBb,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;cAC1Bc,WAAW,EAAE,mBAAmB;cAChCC,eAAe,EAAE,yBAAyB;cAC1CC,OAAO,EAAE;YACX,CAAC;UACH,CAAC;UACDC,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,mBAAmB,EAAE,KAAK;YAC1BC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,OAAO,EAAE;cACX;YACF,CAAC;YACDC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,WAAW,EAAE;cACf;YACF;UACF;QACF,CAAC;MACH;;MAEA;MACA,IAAIlC,cAAc,CAACQ,KAAK,EAAE;QACxB,IAAIxB,KAAK,CAACgB,cAAc,CAACQ,KAAK,EAAE;UAC9BW,IAAI,EAAE,UAAU;UAChBV,IAAI,EAAE;YACJW,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;YAClDC,QAAQ,EAAE,CAAC;cACTZ,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;cACpBe,eAAe,EAAE,CACf,mBAAmB,EACnB,mBAAmB,EACnB,mBAAkB;YAEtB,CAAC;UACH,CAAC;UACDE,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,mBAAmB,EAAE,KAAK;YAC1BC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNK,QAAQ,EAAE;cACZ;YACF;UACF;QACF,CAAC;MACH;IACF;IAEA,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B5C,OAAO,CAACgB,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMH,OAAO,CAACC,GAAG,CAAC,CAACL,YAAY,CAAC,CAAC,EAAEc,kBAAkB,CAAC,CAAC,CAAC;QACxD,MAAMG,YAAY,CAAC;MACrB,UAAU;QACR1B,OAAO,CAACgB,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAM6B,cAAa,GAAKC,MAAM,IAAK;MACjC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QACpCC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACvD,MAAM,CAACmD,MAAK,IAAK,CAAC;IACvB;IAEA,MAAMK,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI;QACF,OAAOzD,MAAM,CAACC,QAAQ,CAACwD,UAAU,CAAC,EAAE,cAAc;MACpD,EAAE,MAAM;QACN,OAAOA,UAAS;MAClB;IACF;IAEA9D,SAAS,CAAC,YAAY;MACpB,MAAMsD,WAAW,CAAC;IACpB,CAAC;IAED,OAAO;MACL5C,OAAO;MACPC,OAAO;MACPK,aAAa;MACbC,YAAY;MACZC,cAAc;MACdoC,WAAW;MACXC,cAAc;MACdM;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}